---

- name: Create /etc/openstack directory
  file:
    path: /etc/openstack
    owner: root
    group: root
    state: directory
  tags:
    - auth
    - ubuntu
    - redhat

- name: Create clouds.yml auth file
  copy:
    src: clouds.yml
    dest: /etc/openstack/clouds.yml
  tags:
    - auth
    - ubuntu
    - redhat

# - name: Authenticate  to cloud
#   os_auth:
#     cloud: openstack_newton

# - name: Display Service Catalog
#   debug: 
#     var: service_catalog

- name: Create Projects
  os_project:
    cloud: openstack_newton
    endpoint_type: internal
    state: present
    name: "{{ item.project_name }}"
    description: "{{ item.project_description }}"
    domain_id: default
    enabled: true
  with_items:
    - { project_name: 'service', project_description: 'Service Project' } 
    - { project_name: 'demo', project_description: 'Demo Project' }
  tags: 
    - create_projects
    - ubuntu
    - redhat

- name: Create Users
  os_user:
    cloud: openstack_newton
    endpoint_type: internal
    state: present
    name: "{{ item.user_name  }}"
    password: "{{ item.password  }}"
    update_password: on_create
    email: "{{ item.email }}"
    domain: "{{ item.domain }}"
    default_project: "{{ item.project }}"
  with_items:
    - { user_name: '{{ demo_username }}', password: '{{ demo_password }}', email: '{{ demo_email }}', domain: '{{ demo_domain }}', project: '{{ demo_project }}', }
    - { user_name: '{{ glance_username }}', password: '{{ glance_password }}', email: '{{ glance_email }}', domain: '{{ glance_domain }}', project: '{{ glance_project }}', }
    - { user_name: '{{ nova_username }}', password: '{{ nova_password }}', email: '{{ nova_email }}', domain: '{{ nova_domain }}', project: '{{ nova_project }}', }
    # - { user_name: '{{ _username }}', password: '{{ _password }}', email: '{{ _email }}', domain: '{{ _domain }}', project: '{{ _project }}', }
    # - { user_name: '{{ _username }}', password: '{{ _password }}', email: '{{ _email }}', domain: '{{ _domain }}', project: '{{ _project }}', }
  tags: 
    - create_users
    - ubuntu
    - redhat

- name: Crete Roles
  os_keystone_role:
    cloud: openstack_newton
    endpoint_type: internal
    state: present
    name: "{{ item.name }}"
  with_items:
    - { name: 'user' }
  tags: 
    - create_roles
    - ubuntu
    - redhat

- name: Associate users and Roles
  os_user_role:
    cloud: openstack_newton
    endpoint_type: internal
    state: present
    user: "{{ item.user }}"
    role: "{{ item.role }}"
    project: "{{ item.project }}"
  with_items:
    - { user: '{{ demo_username }}', role: '{{ demo_role }}', project: '{{ demo_project }}'}
    - { user: '{{ glance_username }}', role: '{{ glance_role }}', project: '{{ glance_project }}'}
    - { user: '{{ nova_username }}', role: '{{ nova_role }}', project: '{{ nova_project }}'}
    # - { user: '{{ _username }}', role: '{{ _role }}', project: '{{ _project }}'}
    # - { user: '{{ _username }}', role: '{{ _role }}', project: '{{ _project }}'}
    # - { user: '{{ _username }}', role: '{{ _role }}', project: '{{ _project }}'}
    # - { user: '{{ _username }}', role: '{{ _role }}', project: '{{ _project }}'}
  tags: 
    - associate_roles
    - ubuntu
    - redhat


- name: Add Keystone Services
  os_keystone_service:
    cloud: openstack_newton
    endpoint_type: internal
    state: present
    name: "{{ item.service_name }}"
    service_type: "{{ item.service_type }}"
    description: "{{ item.service_description}}"
  with_items:
    - { service_name: 'glance', service_type: 'image', service_description: 'OpenStack Image' }
    - { service_name: 'nova', service_type: 'compute', service_description: 'OpenStack Compute' }
    # - { service_name: 'network', service_type: 'network', service_description: 'OpenStack Network Service' }
  tags: 
    - add_services
    - ubuntu
    - redhat

### Uses a custom keystone module located in openstack-ansible-modules ###
- name: Add Keystone Endpoints
  keystone:
    command: "ensure_endpoint"
    login_password: "{{ admin_password }}"
    login_tenant_name: "{{ admin_project }}"
    login_user: "{{ admin_username }}"
    endpoint: "{{ keystone_service_adminurl }}/v3"
    region_name: "{{ keystone_service_region }}"
    service_name: "{{ item.service_name }}"
    service_type: "{{ item.service_type }}"
    endpoint_list:
      - url: "{{ item.service_publicurl }}"
        interface: "public"
      - url: "{{ item.service_adminurl }}"
        interface: "admin"
      - url: "{{ item.service_internalurl }}"
        interface: "internal"
  with_items:
    - { service_name: 'glance', service_type: 'image', service_publicurl: '{{ glance_service_publicurl }}', service_adminurl: '{{ glance_service_adminurl }}', service_internalurl : '{{ glance_service_internalurl }}' }
    - { service_name: 'nova', service_type: 'compute', service_publicurl: '{{ nova_service_publicurl }}', service_adminurl: '{{ nova_service_adminurl }}', service_internalurl : '{{ nova_service_internalurl }}' }
    # - { service_name: 'network', service_type: 'network', service_publicurl: '{{ network_service_publicurl }}', service_adminurl: '{{ network_service_adminurl }}', service_internalurl : '{{ network_service_internalurl }}' }
    # - { service_name: 'ec2', service_type: 'ec2', service_publicurl: '{{ ec2_service_publicurl }}', service_adminurl: '{{ ec2_service_adminurl }}', service_internalurl : '{{ ec2_service_internalurl }}' }
    # - { service_name: 'volume', service_type: 'volume', service_publicurl: '{{ volume_service_publicurl }}', service_adminurl: '{{ volume_service_adminurl }}', service_internalurl : '{{ volume_service_internalurl }}' }
    # - { service_name: 'swift', service_type: 'object-store', service_publicurl: '{{ swift_service_publicurl }}', service_adminurl: '{{ swift_service_adminurl }}', service_internalurl : '{{ swift_service_internalurl }}' }
  tags:
    - add_endpoints
    - ubuntu
    - redhat